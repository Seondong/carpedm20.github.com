설정
====

Sermo는 *클라이언트* 단과 *Server* 단의 설정이 분리되어 있으며 여러분이 Sermo 서버를 호스팅 하기 전에 필요한 사항을 설정해야 합니다


클라이언트 설정
---------------

클라이언트 설정의 경우 등록된 웹사이트 별로 따로 설정할 수 있습니다.


페이당 댓글 수
~~~~~~~~~~~~~~

*# of comments per page*

여러분은 페이지당 코멘트 숫자를 설정할 수 있습니다. 기본값은 10입니다.


댓글 길이
~~~~~~~~~

*Comment length*

각 사이트 별로 댓글의 *최고* 및 *최저* 길으를 설정할 수 있습니다.

블랙 리스트
~~~~~~~~~~

*Black list*

만약 여러분이 한 유저를 블랙 리스트로 추가하고 싶다면, *Manage comments* 페이지로 가서 설정하실 수 있습니다. 또한 여러분은 블랙 리스트로 등록된 유저를 일반 유저로 바꾸고 싶을때 *Site detail* 페이지에서 할 수 있습니다.

금지어
~~~~~~

*ban words*

금지어는 각각의 사이트 마다 따로 설정 됩니다. 만약 여러분이 많은 수의 단어들을 금지어로 추가하고 싶을 때에는, 단어들을 *csv* 파일로 저장해서 업로드 할 수 있습니다! 이때 여러분은 기존 금지어를 모두 제거하고 추가하거나, 기존 금지어를 유지한 채 추가할 수 있습니다.


서버 설정
--------

아래의 모든 설정들은 Sermo 프로젝트의 최상위 디렉토리에 *config.py* 에 저장해야 합니다.


서버 도메인 및 포트
~~~~~~~~~~~~~~~~~~~

세르모는 유명한 소셜 댓글 플랫폼인 `Disqus`_ 의 clone 이지만, 당신의 개인적인 서버에서 호스팅 할 수 있습니다. 하지만 여러분은 서버의 도메인과 포트 넘버를 명시해, 클라이언트 쪽에서 서버로 접속할 수 있도록 방화벽을 열어두어야 합니다.

.. code-block:: python

   SERVER_ADDR = "repl.ajaxui.org"
   SERVER_PORT = "8000"

도메인 대신에, *SERVER ADDRS* 를 IP 주소로 입력해도 큰 상관은 없습니다.


코멘트 테마
~~~~~~~~~~~

아래의 설정들은 Sermo의 클라이언트 쪽 테마 설정들을 보여줍니다:

.. code-block:: python

   COMMENT_PER_PAGE = 10

   THEME_CSS = 'default/comment.css'
   THEME_COMMNET = 'default/comment.html'
   THEME_COMMNETS = 'default/comments.html'


소셜 로그인
~~~~~~~~~~~~

Sermo 댓글이 설치된 사이트를 방문한 유저들은 소셜 로그인을 통해서 댓글을 작성할 수 있습니다. (하지만 관리자의 경우 예외적으로 소셜 로그인을 하지 않더라도 댓글을 작성할 수 있습니다)

아래에는 Sermo에서 로그인 할 수 있는 소셜 네트워크 서비스 입니다:

- 네이버
- 페이스북
- 트위터
- 구글

1. 네이버

`NAVER developer center`_ 에서 클라이언트 id와 시크릿 키를 할당 받아야 합니다.

.. code-block:: python

   NAVER_CLIENT_ID     = 'xxxxxxxxxxxxxxxxxxxx'
   NAVER_CLIENT_SECRET = 'xxxxxxxxxx'

2. 페이스북

`Facebook Developers`_ 에서 페이스북 앱 id와 시크릿 키를 할당 받아야 합니다.

.. code-block:: python

   FACEBOOK_APP_ID     = 'xxxxxxxxxxxxxxx'
   FACEBOOK_API_SECRET = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'

3. 트위터

`Twitter Developers`_ 에서 키와 시크릿 키를 할당 받아야 합니다.

.. code-block:: python

   TWITTER_CONSUMER_KEY    = 'xxxxxxxxxxxxxxxxxxxxxxxxx'
   TWITTER_CONSUMER_SECRET = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'

3. 구글

`Google developer console`_ 에서 클라이언트 id와 시크릿 키를 할당 받아야 합니다.

.. code-block:: python

   GOOGLE_OAUTH2_CLIENT_ID     = 'xxxxxxxxxxxx-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.apps.googleusercontent.com'
   GOOGLE_OAUTH2_CLIENT_SECRET = 'xxxxxxxxxxxxxxxxxxxxxxxx'


.. _NAVER developer center: http://developer.naver.com/wiki/pages/OpenAPI
.. _Facebook Developers: https://developers.facebook.com/
.. _Twitter Developers: https://dev.twitter.com/
.. _Google developer console: https://console.developers.google.com/project

.. _Disqus: https://disqus.com/
